export interface IProject  {
    type?: string,
    language?: string,
    imageUrl?:string,
    altImg?: string,
    framework?: string,
    about?: string,
    skills?: string,
    tested?: boolean,
    documented?: boolean,
    gitHub?: string ,
    experiment?: string,
}
const projects =
[
  {
    type: 'backend',
    language: 'Java',
    imageUrl: 'assets/banner/springboot.webp',
    altImg: 'Spring Boot',
    framework: 'SpringBoot',
    skills: "Spring Boot 3 â€“ Rest Api, Spring Security, Spring Data JPA, JWT, Swagger (Open API), Cross-Origin Resource Sharing (CORS), Authorization, Authentication, Mockito, JUnit 5,  Test Containers, Bean Validation, Pagination, Webflux, Hateoas, Mysql, flywaydb, Model Mapper.",
    about: "This application is designed to implement the core of a web backend. The business rule is ticket sales.",
    gitHub: 'https://github.com/IgorMundim/ticket-backend-spring-boot',
    tested: true,
    documented: true,
    experiment: false,
  },
  {
    type: 'backend',
    language: 'Django',
    imageUrl: 'assets/banner/django.webp',
    altImg: 'Django',
    framework: 'Django',
    skills: "Django Web Framework - Django Rest Framework (Rest Api), Social Oauth2,  Django Models e Django Object-relational mapper (ORM), Django Storage, Django Rest Swagger, Django Cors Headers,  Authorization, Authentication, PyTest, Serializers,  PostgreSql, AWS3 - SDK Boto3.",
    about: "This application is designed to implement the core of a web backend. The business rule is ticket sales.",
    gitHub: 'https://github.com/IgorMundim/ticket_backend',
    tested: true,
    documented: true,
    experiment: false,
  },
  {
    type: 'backend',
    language: 'TypeScript',
    imageUrl: 'assets/banner/express.webp',
    altImg: 'Express JS',
    framework: 'Express JS',
    skills: 'Express JS - Rest Api, JWT Authentication, Authorization, Knex, Swagger, CORs, Jest - SuperTest, Express Async Error, Multer, Knex, PostgreSql.',
    about: "This application is designed to implement the core of a web backend. The business rule is ticket sales.",
    gitHub: 'https://github.com/IgorMundim/ticket-backend-node-sql',
    tested: true,
    documented: true,
    experiment: false,
  },
  {
    type: 'backend',
    language: 'JavaScript',
    imageUrl: 'assets/banner/apollo.webp',
    altImg: 'Apollo Server',
    framework: 'Apollo Server',
    skills: 'Apollo Server - GraphQL, Dataloader, JWT Authentication, knex, PostgreSql.',
    gitHub: 'https://github.com/IgorMundim/graphql-apollo-server',
    tested: false,
    documented: true,
    experiment: false,
  },
  {
    type: 'frontend',
    language: 'TypeScript',
    imageUrl: 'assets/banner/next.png',
    altImg: 'ReactJS, NextJS',
    framework: 'ReactJS, NextJS',
    skills: 'NextJS SSR - Next Auth, StoryBook, Styled Components, Vitest, Jest, Testing Library, Material Outlined, React Hooks.',
    about: "This application is designed to implement the core of a web frontend. The business rule is ticket sales.",
    gitHub: 'https://github.com/IgorMundim/ticket_frontend',
    tested: false,
    documented: true,
    experiment: false,
  },
  {
    type: 'frontend',
    language: 'TypeScript',
    imageUrl: 'assets/banner/angular.png',
    altImg: 'Angular',
    framework: 'Angular',
    skills: 'AngularJS - This application is designed to implement my portfolio.',
    gitHub: 'https://github.com/IgorMundim/angular-base',
    tested: false,
    documented: false,
    experiment: "APP to explore specific behavior"
  },
  {
    type: 'frontend',
    language: 'TypeScript',
    imageUrl: 'assets/banner/react.png',
    altImg: 'ReactJS',
    framework: 'ReactJS',
    skills: "ReactJS - This is a basic application that was implemented to practice state management with React Reducer.",
    gitHub: 'https://github.com/IgorMundim/react-reducer',
    tested: false,
    documented: false,
    experiment: "APP to explore specific behavior",
  },
  {
    type: 'frontend',
    language: 'TypeScript',
    imageUrl: 'assets/banner/angular.png',
    altImg: 'Angular',
    framework: 'ReactJS',
    skills: 'AngularJS - This is a basic application that was implemented to practice state management with Angular Service and NgModule.',
    gitHub: 'https://github.com/IgorMundim/angular-base',
    tested: false,
    documented: false,
    experiment: "APP to explore specific behavior"
  },
  {
    type: 'frontend',
    language: 'TypeScript',
    imageUrl: 'assets/banner/react.png',
    altImg: 'ReactJS',
    framework: 'ReactJS',
    skills: 'ReactJS - This is a basic application that was implemented to practice state management with React Redux.',
    gitHub: 'https://github.com/IgorMundim/react-redux',
    tested: false,
    documented: false,
    experiment: "APP to explore specific behavior",
  },
  {
    type: 'frontend',
    language: 'TypeScript',
    imageUrl: 'assets/banner/angular.png',
    altImg: 'Angular',
    framework: 'AngularJS',
    skills: 'AngularJS - This is a basic application that was implemented to practice state management with NgRx and Standalone Components.',
    gitHub: 'https://github.com/IgorMundim/angular-17',
    tested: false,
    documented: false,
    experiment: "APP to explore specific behavior"

  },
  {
    type: 'frontend',
    language: 'TypeScript',
    imageUrl: 'assets/banner/react.png',
    altImg: 'ReactJS',
    framework: 'ReactJS',
    skills: 'ReactJS - This is a basic application that was implemented to practice state management with React Redux Toolkit.',
    gitHub: 'https://github.com/IgorMundim/react-redux-toolkit',
    tested: false,
    documented: false,
    experiment: "APP to explore specific behavior",
  },
  {
    type: 'frontend',
    language: 'TypeScript',
    imageUrl: 'assets/banner/react.png',
    altImg: 'ReactJS',
    framework: 'ReactJS',
    skills: 'ReactJS - This is a basic application that was implemented to practice with React Apollo Client.',
    gitHub: 'https://github.com/IgorMundim/graphql-apollo-client',
    tested: false,
    documented: false,
    experiment: "APP to explore specific behavior",
  },
  {
    type: 'aws-cdk',
    language: 'TypeScript',
    imageUrl: 'assets/banner/aws-cdk.jpg',
    altImg: 'Aws CDK',
    framework: 'CDK',
    skills: 'Development Kit (CDK) - AWS CloudFormation, AWS API Gateway, AWS IAM, AWS Lambda, AWS DynamoDB, AWS CloudWatch Insights, AWS CloudWatch Alarms, AWS X-Ray, AWS SNS, AWS SQS, AWS EventBridge, AWS SES.',
    about: "This application is designed to implement the core of a AWS CDK. It has no business logic.",
    gitHub: 'https://github.com/IgorMundim/ServerlessAWS',
    tested: false,
    documented: false,
    experiment: "APP to explore specific behavior",
  },
] as IProject[];

export default projects ;
